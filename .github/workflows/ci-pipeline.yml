name: CI Pipeline

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      publish_job:
        description: "Choose which publish job to run"
        required: true
        default: "beta"
        type: choice
        options:
          - beta
          - production
      version_bump:
        description: "Choose version bump type (for production only)"
        required: false
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
      changelog_message:
        description: "Message to include in CHANGELOG.md (for production only)"
        required: false

permissions:
  contents: write

jobs:
  install-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

  test:
    needs: install-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Run the tests before publishing
      - name: Run tests
        run: npm run test

  publish:
    needs: [install-and-build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      # Set npm registry with authentication
      - name: Set npm registry
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # Handle production release: version bump only
      - name: Bump version (production only)
        if: ${{ github.event.inputs.publish_job == 'production' }}
        run: npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version

      # Re-run npm install to update package-lock.json based on the bumped version
      - name: Update package-lock.json (production only)
        if: ${{ github.event.inputs.publish_job == 'production' }}
        run: npm install

      # Update changelog (production only)
      - name: Update changelog (production only)
        if: ${{ github.event.inputs.publish_job == 'production' }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          CHANGELOG_MESSAGE="${{ github.event.inputs.changelog_message }}"
          if [ -z "$CHANGELOG_MESSAGE" ]; then
            CHANGELOG_MESSAGE="Version bumped to $VERSION"
          fi
          # Prepend the new changelog entry with proper formatting
          echo -e "## $VERSION - $(date +'%Y-%m-%d')\n$CHANGELOG_MESSAGE\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

      # Commit version bump, package-lock.json update, and changelog changes
      - name: Commit and push changes (production only)
        if: ${{ github.event.inputs.publish_job == 'production' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "ci: bump version to $VERSION and update changelog"
          git push

      # Beta publish (without version bump commit)
      - name: Publish beta (without commit)
        if: ${{ github.event.inputs.publish_job == 'beta' }}
        run: |
          GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
          npm version "$(node -p "require('./package.json').version")-beta.${GIT_COMMIT_HASH}" --no-git-tag-version
          npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Production publish
      - name: Publish production
        if: ${{ github.event.inputs.publish_job == 'production' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Temporarily change package name to "inputron"
        run: |
          sed -i 's/"name": "[^"]*"/"name": "inputron"/' package.json

      - name: Publish under "inputron"
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Revert package.json changes (for name change)
        run: git checkout package.json
